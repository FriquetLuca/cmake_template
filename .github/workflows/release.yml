name: Build and Upload Release Binaries

on:
  push:
    tags:
      - "v*.*.*"  # Triggers on version tags like v1.2.3

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up CMake
        uses: lukka/get-cmake@latest  # optional, you can use system CMake too
        with:
          cmakeVersion: latestrc      # <--= optional, use the latest release candidate (notice the 'rc' suffix).
          ninjaVersion: latest        # <--= optional, use the latest release (non candidate).

      - name: Configure CMake (Release)
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release

      - name: Prepare artifact
        run: |
          mkdir -p build/package

          # Linux/macOS: single-config builds
          if [[ -f build/bin/hello ]]; then
            cp build/bin/hello build/package/
          fi

          # Windows: multi-config builds
          if [[ -f build/bin/Release/hello.exe ]]; then
            cp build/bin/Release/hello.exe build/package/
          fi

          # Archive the package
          cd build/package
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            7z a ../../release-${{ runner.os }}.zip *
          else
            tar -czf ../../release-${{ runner.os }}.tar.gz *
          fi
        shell: bash

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            release-${{ runner.os }}.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
